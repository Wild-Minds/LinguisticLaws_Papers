
Graph for gesture types
library(ggplot2)
library(ggpol)
GestureTypes <- read.csv(file.choose(), header = T) #Load data
head(GestureTypes)

#Graph it out
library(ggplot2)
Aggregate<-data.frame(aggregate(GestureTypes$Duration, by=list(GestureTypes$Gesture), FUN=sd))
Aggregate
Aggregate <-Aggregate%>%
  dplyr::rename(
    Gesture=Group.1,
    sd = x,)

Model1GraphPivot <- GestureTypes%>% #create pivot table for each gesture type with average gesture type duration and total duration as well as frequency
  dplyr::group_by(Gesture) %>%
  dplyr::summarise(d= mean(Duration), D=sum(Duration), F=n())

Model1GraphPivot
GestureTypesGraph<-full_join(Model1GraphPivot, Aggregate, by='Gesture')

GestureTypesGraph$Category <- c('Manual','Manual','Manual','Manual','Manual',
                               'Body','Manual','Body','Manual','Manual',
                               'Body','Manual','Manual','Manual','Body',
                               'Manual','Body','Manual','Manual','Manual',
                               'Manual','Manual','Manual','Manual','Body',
                               'Manual')
GestureTypesGraph

GestureTypesGraph$sem<-(GestureTypesGraph$sd/sqrt(GestureTypesGraph$F))

my_y_title <- expression(paste(italic('d'),' (s)'))
my_x_title<- expression(paste(italic('f')))
rct<- data.frame(xmin=-5, xmax=60, ymin=0, ymax=6)
tiff("Model1Graph", units='in', width=6, height=5, res=300)
Zipf<-(ggplot(GestureTypesGraph, aes(x=F, y=d)) +
        geom_point(size=2.5, aes(color=Category)) + scale_color_manual(values=c("#FFC20A", "#0C7BDC")) +
        theme_classic() +
        labs(x=my_x_title, y=my_y_title) + 
        theme(legend.position = 'none') +
        theme(axis.text = element_text(size=10), axis.title = element_text(size=14))  +
        geom_errorbar(aes(color=Category, ymin=d-sem, ymax=d+sem), width=3)  +  
        geom_smooth(aes(color=Category), method=lm, se=F) +
        geom_smooth( method=lm, se=F, linetype='dashed', color='black') + 
  labs(tag='A') + scale_x_continuous(breaks = c(0,50,100,150,200,250), limits = c(-10,270))+ 
    scale_y_continuous(breaks=c(0,1.0,2.0,3.0,4.0,5.0,6.0))+
  geom_rect(data=rct,aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax), color='red', alpha=0, inherit.aes = F, size=1))
dev.off()

Zipf

#Zoomed area ?
tiff("Model1Zoom", units='in', width=6, height=5, res=300)
my_x_title<- expression(paste("Frequency"))
zoomed<-ggplot(GestureTypesGraph, aes(x=F, y=d)) +
  geom_point(size=2.5, aes(color=Category)) + scale_color_manual(values=c("#FFC20A", "#0C7BDC")) +
  theme_classic() +
  labs(x=my_x_title, y=my_y_title) + 
  theme(legend.position = 'none') +
  theme(axis.text = element_text(size=10), axis.title = element_text(size=14))  +
  geom_errorbar(aes(color=Category, ymin=d-sem, ymax=d+sem), width=0.5)  +  
  geom_smooth(aes(color=Category), method=lm, se=F) +
  geom_smooth( method=lm, se=F, linetype='dashed', color='black') + labs(tag = 'B') +
  scale_x_continuous(breaks = c(0,10,20, 30, 40, 50), limits = c(0,50))
dev.off()
zoomed

install.packages('ggpubr')
library(ggpubr)
figure <- ggarrange(Zipf, zoomed, ncol=1, nrow=2)
tiff("Fig_1", units='in', width = 6, height = 10, res=300)
figure
dev.off()

#Menzerath's law graph
library(plyr)

GestureTokens<-unite(GestureTokens,'Size', 'Type')

Y<-data.frame(aggregate(GestureTokens$d, by=list(GestureTokens$z), FUN=mean))
Z<-data.frame(aggregate(GestureTokens$d, by=list(GestureTokens$z), FUN=sd))

dataframe <-left_join(Y,Z, by="Group.1")
dataframe <-separate(dataframe, Group.1, c("Size", "Category"))
dataframe$Size<-as.factor(dataframe$Size)
df <- transform(dataframe,
                Category=revalue(Category,c("manual"="Manual")))

my_y_title <- expression(paste("Duration (s)"))
my_x_title<- expression(paste("Sequence Size"))
tiff("TokensCategory", units='in', width=10, height=7, res=300)
ggplot(df, aes(x=Size, y=x.x, color=Category)) +
  geom_point(position=position_dodge(width=0.5), size=3)+
  theme_classic()+
  geom_errorbar(aes(ymin=x.x-x.y, ymax=x.x+x.y), width=0.3, 
                position=position_dodge(width=0.5))+
  labs(x=my_x_title, y=my_y_title)  +
  theme(axis.text = element_text(size=11), 
        axis.title = element_text(size=13), 
        legend.text = element_text(size=11),
        legend.title = element_text(size=13))
dev.off()


#Boxplot with jitter points 

my_y_title <- expression(paste("Duration (s)"))
my_x_title<- expression(paste("Gesture Type"))
tiff("GesturesSummary", units='in', width=10, height=7, res=300)
ggplot(GLMMData, aes(x=Gesture, y=Duration, fill=Type))+ theme_classic()+
  geom_boxjitter(jitter.shape = 21, jitter.color = NULL,
                 outlier.colour = NULL, outlier.shape = 1,
                 errorbar.draw = T,
                 errorbar.length = 0.2, show.legend = F) +
  scale_fill_manual(values=c("#FFC20A", "#0C7BDC")) +
  theme_classic() + theme(axis.text.x = element_text(angle = 90,  vjust = 0.5, hjust=1))+
  labs(x=my_x_title, y=my_y_title)
dev.off()

#Menzerath's law graph
library(dplyr)
library(plyr)
install.packages('goeveg')
library(goeveg)

GestureTokens<-read.csv(file.choose(), header = T)
head(GestureTokens)
Y<-data.frame(aggregate(GestureTokens$d, by=list(GestureTokens$Size), FUN=mean))
Z<-data.frame(aggregate(GestureTokens$d, by=list(GestureTokens$Size), FUN=sd))
K<-data.frame(aggregate(GestureTokens$d, by=list(GestureTokens$Size), FUN=length))
Y
GestureTokens

dataframe <-full_join(Y,Z, by="Group.1")
dataframe <-full_join(dataframe,K, by="Group.1")
dataframe
dataframe <-rename(dataframe, c('Size'='Group.1'))
dataframe <-rename(dataframe, c('mean'='x.x'))
dataframe<-rename(dataframe,c('sd'='x.y'))
dataframe<-rename(dataframe,c('count'='x'))
dataframe$Size<-as.factor(dataframe$Size)
dataframe$sem<-(dataframe$sd/sqrt(dataframe$count))
dataframe

my_y_titleMenz <- expression(paste(italic('n')))
my_x_titleMenz<- expression(paste(italic('t'), ' (s)'))
tiff("Fig_2", units='in', width=5, height=4, res=300)
print(ggplot(dataframe, aes(x=Size, y=mean))+
  geom_point(size=3)+
  theme_classic()+
  geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=0.1)+
  labs(x=my_y_titleMenz, y=my_x_titleMenz)  +
  theme(axis.text = element_text(size=10), 
        axis.title = element_text(size=14), 
        legend.text = element_text(size=10),
        legend.title = element_text(size=14)))
dev.off()

library(ggplot2)

ggplot(dataframe, aes(x=Size, y=mean)) + geom_point()

plot(dataframe$Size, dataframe$mean)


#Indiividual Menzerath's law graph ----
tiff("IndividualEffect", units='in', width=8, height=8, res=300)
ggplot(data = Graph_Individual, aes(x=Sequence.Size, y=mean_d)) + 
  geom_point(aes(size=Count), color="Orange") + facet_wrap(~Signaller) +
  geom_errorbar(aes(ymin=mean_d-sem, ymax=mean_d+sem), width=0.2) +
  scale_size(range = c(1,5), breaks=c(10,50,100)) +
  scale_x_continuous(breaks=c(1:6)) +
  labs(x=expression(paste(italic("n"))), y=expression(paste(italic("t"), " (s)"))) +
  theme(axis.title = element_text(size=10), legend.text = element_text(size=10),
        legend.title = element_text(size=10), axis.text = element_text(size=10))
dev.off()



